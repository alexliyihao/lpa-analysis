Search.setIndex({"docnames": ["autoapi/index", "autoapi/lpa_pipeline/appearance_table_generator/index", "autoapi/lpa_pipeline/association/index", "autoapi/lpa_pipeline/encodings/index", "autoapi/lpa_pipeline/freq_table_generator/index", "autoapi/lpa_pipeline/index", "autoapi/lpa_pipeline/kiv_subtypes/index", "autoapi/lpa_pipeline/locus_collector/index", "autoapi/lpa_pipeline/metal_toolkit/index", "autoapi/lpa_pipeline/post_processing/index", "autoapi/lpa_pipeline/snps_filter/index", "changelog", "contributing", "example", "index"], "filenames": ["autoapi/index.rst", "autoapi/lpa_pipeline/appearance_table_generator/index.rst", "autoapi/lpa_pipeline/association/index.rst", "autoapi/lpa_pipeline/encodings/index.rst", "autoapi/lpa_pipeline/freq_table_generator/index.rst", "autoapi/lpa_pipeline/index.rst", "autoapi/lpa_pipeline/kiv_subtypes/index.rst", "autoapi/lpa_pipeline/locus_collector/index.rst", "autoapi/lpa_pipeline/metal_toolkit/index.rst", "autoapi/lpa_pipeline/post_processing/index.rst", "autoapi/lpa_pipeline/snps_filter/index.rst", "changelog.md", "contributing.md", "example.ipynb", "index.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.appearance_table_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.association</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.encodings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.freq_table_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.kiv_subtypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.locus_collector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.metal_toolkit</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.post_processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lpa_pipeline.snps_filter</span></code>", "Changelog", "Contributing", "Encode the output from Coassin pipeline", "lpa-analysis"], "terms": {"thi": [0, 2, 3, 7, 8, 10, 13], "page": 0, "contain": [0, 2], "auto": 0, "gener": [0, 1, 2, 3, 4, 7, 8, 10], "document": 0, "1": [0, 2, 3, 4, 6, 8, 10, 13], "lpa_pipelin": [0, 11, 13, 14], "metal_toolkit": [0, 5, 9, 13], "associ": [0, 5, 8, 9], "encod": [0, 2, 4, 5, 6, 10], "freq_table_gener": [0, 1, 5, 13], "locus_collector": [0, 5, 13], "snps_filter": [0, 5, 13], "creat": [0, 2, 8, 14], "sphinx": 0, "autoapi": 0, "The": [1, 2, 3, 6, 8, 9, 10, 12, 13, 14], "toolkit": 8, "run": [2, 3, 8, 9, 10, 13, 14], "metal": [8, 9, 13, 14], "intern": 8, "initi": [1, 3, 4, 7, 8, 10], "mtk": 8, "metaltoolkit": [8, 13], "ethnic": [1, 8, 13], "eu": [1, 8, 13], "af": [1, 8, 13], "hisp": [1, 8, 13], "verbos": [2, 3, 8, 13], "metal_path": [8, 13], "mnt": [8, 13], "mf": [8, 13], "cluster": [3, 8, 13, 14], "bin": [8, 13], "name": [1, 2, 3, 4, 6, 8, 13], "need": [3, 4], "analyz": [], "bool": [3, 4, 8], "true": [3, 4, 8, 13], "when": [1, 2, 3, 8, 13], "read": [3, 7, 8], "write": 8, "file": [2, 3, 6, 7, 8, 13, 14], "ui": [], "print": [2, 13], "log": 8, "path": [2, 3, 7, 8, 9, 13], "binari": [6, 13], "develop": [], "environ": [], "cannot": [], "us": [1, 2, 3, 4, 6, 8, 13, 14], "load": 3, "via": [3, 6, 13], "jupyterlab": [], "hold": [], "sge": [3, 11, 13, 14], "you": [4, 13, 14], "can": [2, 3, 6, 13, 14], "either": 9, "echo": [], "find": [2, 13], "2": [2, 3, 4, 6, 13, 14], "modifi": 4, "generate_metal_running_script": 8, "method": [2, 3, 9], "your": 3, "allow": [], "One": [8, 13], "line": [2, 3, 7, 8, 10], "pipelin": [1, 2, 3, 6, 8, 9, 12, 14], "run_met": [8, 13], "path_associ": [8, 13], "str": [1, 2, 3, 4, 6, 7, 8, 9, 13], "path_meta": [8, 13], "multi_line_head": 8, "onli": [2, 3, 4, 6, 8, 13, 14], "make": [2, 8], "differ": [3, 8], "output": [1, 2, 3, 7, 8, 9, 10], "header": [2, 8, 10, 13], "anoth": [2, 8], "row": [2, 3, 6, 8, 9, 13], "noth": [], "inform": [2, 7, 9, 13, 14], "If": [2, 3, 4, 14], "doc": [], "each": [1, 2, 3, 4, 6, 8, 9, 10, 13], "step": [3, 8, 9, 10], "after": [3, 8], "__doc__": 13, "is_notebook": [], "http": [6, 8], "stackoverflow": 8, "com": [6, 8], "39662359": [], "python": [3, 8, 11, 14], "prepar": 8, "process": [2, 3, 8, 9], "": [2, 3, 4, 7, 8, 9, 10, 13, 14], "meta": [8, 9, 14], "analysi": [2, 4, 8, 9], "intak": [], "folder": [3, 8], "result": [2, 3, 6, 7, 8, 9, 10], "snpassoci": [2, 8, 13], "instanc": [1, 8, 10], "provid": [2, 3, 4, 10, 13], "follow": [1, 2, 3, 8, 9, 10, 13], "api": [1, 2, 3, 4, 8, 10, 13], "final": 3, "fals": [3, 4, 8, 13], "It": [2, 3, 8, 9, 14], "do": [], "everyth": 8, "below": 8, "sub": [], "copy_tre": 8, "move": 8, "all": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14], "properli": 8, "arrang": 8, "them": [2, 3, 8, 12], "trait": [2, 8, 9], "csv_to_met": 8, "format": [1, 3, 4, 6, 8, 13], "csv": [3, 8, 13], "from": [1, 2, 3, 6, 8, 9, 10, 14], "exist": [2, 3, 8], "generate_metal_script": 8, "script": [8, 11, 13, 14], "sh": 8, "metal_script": 8, "txt": [3, 6, 7, 8, 13], "specifi": [2, 8], "chmod": 8, "x": [3, 6, 8, 9], "sourc": 8, "subprocess": 8, "aggregate_result": [8, 9, 13], "an": [2, 3, 6, 8, 9, 13], "aggreg": 8, "tabl": [1, 2, 3, 4, 7, 8, 9, 10], "next": [3, 6, 7, 8], "pd": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13], "concat": [3, 8, 13], "sub_fold": 8, "axi": [8, 13], "0": [2, 3, 4, 8, 9, 10, 13], "concaten": [2, 3, 8], "formatting_final_result": 8, "df": [1, 2, 3, 8, 9, 10], "i": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14], "histor": 8, "problem": [1, 8], "fine": [8, 13], "set": [2, 4, 8, 13], "save_final_output": 8, "deal": [2, 3, 8], "bug": 8, "panda": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13], "multi": 8, "onc": 8, "copi": [8, 14], "must": 8, "alreadi": 8, "new": [2, 8], "order": [], "keep": [2, 3, 8], "unaffect": 8, "version": [3, 8], "paramet": [1, 2, 3, 4, 6, 8, 9, 10], "boolean": [2, 8, 10], "our": [3, 6, 13], "visual": 8, "code": [2, 3, 8, 13, 14], "usual": [], "save": [2, 3, 8, 13], "addit": [2, 8], "_for_met": 8, "end": 8, "3": [2, 3, 13, 14], "4": [3, 13], "aggregate_all_trait": 8, "xlsx": [8, 13], "better": 8, "explor": 8, "dataframe_to_met": 8, "given": [1, 2, 3, 4, 8], "datafram": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13], "accept": 8, "return": [1, 2, 3, 4, 6, 7, 8, 9, 10], "tidi": [1, 3, 7, 8], "readi": 8, "type": [1, 2, 3, 4, 6, 7, 8, 9, 10], "df_new": [], "includ": [2, 3, 4, 8, 14], "string": [1, 3, 8], "none": [2, 3, 4, 7, 8, 9, 10, 13], "option": [2, 3, 4, 7, 8, 10, 13], "well": [2, 4, 8, 13], "_metal_script_head": 8, "_metal_script_descript": 8, "descript": 8, "part": [3, 4, 8, 12], "_metal_script_analyz": 8, "_get_snp_pos_data": [], "kei": [2, 4, 8, 13], "specif": [2, 3, 8, 10], "get": [3, 8], "request": 8, "info": [2, 3, 8, 9], "add": [8, 10], "suffix": [2, 8], "_get_po": 8, "snp_po": 13, "extract": [2, 8, 13], "po": [3, 6, 8, 13], "integ": 8, "ref": [3, 6, 8, 13], "alt": [3, 6, 8], "give": [2, 3, 8, 9, 10, 13], "combin": [2, 3, 8], "wrapper": [3, 6, 8, 9], "which": [3, 6, 8], "solv": 8, "multiindex": 8, "excel": 8, "see": [8, 14], "71305025": 8, "_save_double_column_df": 8, "xl_writer": 8, "startrow": [], "kwarg": [2, 8], "doublecolumn": [], "xlwriter": 8, "credit": 8, "_log": 8, "just": [2, 3, 8, 13], "clean": [3, 8], "parser": [3, 4, 7, 8, 10], "association_test": 2, "endogen": 2, "variabl": [2, 4], "target_strategi": [2, 13], "target_dataset": [2, 13], "preprocess": [2, 13], "split": 3, "dataset": [2, 13], "uniqu": 10, "valu": [2, 3, 4, 6, 9, 10, 13], "column": [2, 3, 4, 6, 8, 9, 10, 13], "defin": [2, 4, 6, 13], "extra_iterate_on": [2, 13], "group": [2, 4], "encoded_snp": [2, 13], "other_exog": [2, 13], "exogen": 2, "one_to_one_exog": 2, "one_to_one_strategi": 2, "other": [2, 3], "regress": [2, 13], "engin": [2, 13], "two": [2, 4, 8], "sklearn": 2, "style": 2, "snp_asso": 2, "fit": 2, "transform": 2, "fit_transform": [2, 13], "kwargs_1": 2, "encode_dementia": 2, "dropna": [2, 13], "filter_c": [2, 13], "threshold": [2, 4], "5": [2, 3, 13], "filter": [2, 10], "c": [2, 6, 13], "frequenc": [1, 2, 4, 13], "both": [2, 3], "should": [2, 3, 4, 6, 8, 13], "appear": [1, 2, 3], "more": [2, 3, 13], "than": [2, 10, 13], "time": [2, 3], "index": [2, 6, 10, 13], "sampl": [2, 3, 13], "id": [2, 3, 6, 10, 13], "ar": [2, 3, 4, 6, 13, 14], "snp": [1, 2, 3, 4, 6, 10], "int": [1, 2, 3, 4, 8], "number": [1, 2, 3, 10, 13, 14], "target_strategy_serum": [2, 13], "dict": [2, 4], "output_path": [2, 3, 13], "snp_alia": [2, 8, 9, 13], "one_to_one_alia": 2, "na_strategi": 2, "drop": [2, 10, 13], "group_na_strategi": 2, "snp_wise": 2, "list": [1, 2, 4, 7, 8, 13], "snps_preprocessing_strategi": [2, 13], "meta_info": [], "data": [1, 2, 3, 4, 9, 14], "param": [2, 3], "loop": [2, 3], "take": [2, 3, 13], "target": 2, "func": 2, "model": 2, "dictionari": 2, "pre": 2, "mention": [2, 4], "inner": [2, 13], "have": [2, 4, 6, 13], "statsmodel": [2, 9, 13], "design": [2, 4, 12], "discret": 2, "discrete_model": 2, "logit": [2, 8], "linear_model": [2, 13], "ol": [2, 8, 13], "ani": [2, 3, 8, 12, 13], "bse": 2, "pvalu": 2, "work": [1, 2, 14], "seri": 2, "input": [2, 3, 7], "strategi": 2, "root": 2, "refer": 2, "exog": 2, "base": [2, 3, 10, 14], "correspond": 2, "one": [2, 4, 7, 10, 13], "na": [2, 3, 10, 13], "avail": 2, "rais": 2, "nan": [2, 13], "check": [2, 3, 4, 9, 13], "done": 2, "observ": 2, "error": 2, "how": 2, "appli": [2, 3, 9, 10], "wise": [2, 3], "statu": 2, "extra": 2, "iter": 2, "pleas": [2, 3, 4, 12, 13], "notic": 2, "mai": 2, "caus": [2, 9], "sever": 2, "explos": 2, "appi": [], "befor": [2, 3], "default": [1, 2, 3, 4, 10], "total": 3, "count": [1, 10], "actual": [2, 3, 13], "test": 2, "cover": [2, 4, 10], "previous": [2, 13], "_get_column_nam": 2, "col": [2, 3], "necessari": [2, 9], "_generate_filenam": 2, "n_snp": 2, "endog_vari": 2, "extra_label": 2, "_generate_info": 2, "endog": 2, "variable_nam": 2, "processed_snp": 2, "n_sampl": [2, 3], "task": 2, "_save_asscociation_result": [], "_calculate_freq": 2, "comput": [1, 2, 4, 9, 13], "_association_snp": 2, "snp_tabl": 2, "variant": [1, 2, 3, 6, 8, 9, 10], "For": [2, 3, 9, 13, 14], "individu": [2, 3, 6], "beta": [2, 9, 13], "weight": 2, "effect": [2, 9], "size": [2, 13], "standard": 2, "p": [2, 9], "numer": [2, 13], "most": 2, "stand": [2, 4, 6], "tupl": [1, 2, 3, 4, 10], "analysis_info": [], "df_result": [], "variablesa": [], "record": [2, 3, 7, 13], "brief": 2, "output_info": [], "rule": 3, "raw": 3, "coverag": 3, "raw_total_coverage_threshold": 3, "posit": [3, 6, 10], "miss": 3, "person": 3, "look": 12, "annot": 3, "present": 3, "variant_level": 3, "variant_level_threshold": 3, "support": [3, 13], "total_coverag": 3, "read_supporting_threshold": 3, "otherwis": 3, "eco": [3, 13], "encodingcoassinoutput": [3, 13], "choos": 7, "input_path": [3, 7, 13], "some": [3, 7], "parent": [3, 7, 13], "bam": [3, 7], "bam_list": [3, 7, 13], "requir": [3, 14], "50": [3, 13], "01": [3, 4, 13], "10": [3, 6, 13], "encode_individu": [3, 13], "saving_step": [3, 13], "veri": 3, "consum": 3, "origin": [3, 4], "parallel": 3, "recommend": 3, "A": [1, 2, 3, 4, 6, 10, 13, 14], "larger": 3, "reduc": 3, "overhead": 3, "finish": [], "thread": [], "generate_coverage_tot": [3, 13], "coverage_tot": 3, "generate_encoded_result": [3, 13], "encoded_result": [1, 3], "coassin_pipelin": [3, 11, 13, 14], "algorithm": 3, "didn": [3, 13], "t": [3, 6, 10, 13], "mutat": 3, "els": 3, "we": [3, 13], "togeth": 3, "conflict": 3, "hardwar": 3, "prevent": 3, "growth": 3, "cross": 3, "access": 3, "queri": 3, "especi": 3, "minim": 3, "system": 3, "its": 3, "memori": 3, "cost": 3, "variantsannot": 3, "dure": [2, 3], "1st": 3, "huge": 3, "customiz": 3, "reproduc": 3, "4000": [3, 13], "subject": [3, 10, 13], "least": 3, "10gb": 3, "smooth": 3, "20gb": 3, "30gb": 3, "kernel": 3, "suggest": [3, 6, 13], "_verify_coassin_output": 3, "assert": 3, "complet": [3, 9], "coassin": [3, 7, 10, 14], "valid": [3, 13], "_encode_individu": 3, "bam_path": 3, "procedur": 3, "up": [2, 3], "invidu": [], "_encode_posit": 3, "annotated_fil": 3, "logic": 3, "allel": [3, 9], "obtain": 3, "dataframegroupbi": [3, 4], "object": 3, "_tidy_encoded_result": 3, "inplac": [3, 13], "first": [3, 6, 9, 10, 11], "long": 3, "so": [2, 3, 12], "amount": 3, "intermedi": 3, "self": [1, 3], "_output_path": 3, "custom": 3, "save_step": 3, "everi": 3, "program": 3, "sample_nam": 3, "coverage_total_fin": 3, "same": [3, 6, 13], "abov": [3, 13], "tidy_when_load": 3, "encoded_result_fin": [3, 13], "seper": [], "applic": 3, "combined_": [], "_combine_position_wrapp": 3, "_combine_encoded_on_posit": 3, "case": [3, 4], "doesn": [3, 10, 13], "annotatedvari": 3, "non": [3, 10], "proven": 3, "enough": [3, 13], "Its": [], "technic": 3, "possibl": 3, "6": [3, 13], "rest": 3, "thei": 3, "7": [3, 13], "_extract_id": 3, "sampleid": [], "helper": 3, "pure": 3, "digit": 3, "washei": 3, "bqsr": 3, "recal": 3, "_get_file_annot": 3, "insid": 3, "_data_cleaning_annot": 3, "dafafram": [], "_get_file_raw": 3, "_data_cleaning_raw": 3, "_get_coverage_tot": 3, "common": [1, 4, 13], "usag": [1, 4], "class_info_t": [1, 4, 13], "ha": [4, 13], "class_vari": [1, 4, 13], "indic": [4, 10], "belong": [], "one_hot_t": [1, 4, 13], "hot": [4, 10, 13], "ftg": [1, 4, 13], "freqtablegener": [1, 4, 13], "Not": [4, 13], "detect": [4, 13], "rare": [1, 4, 13], "where": [4, 6, 10], "rariti": [1, 4], "freq": [2, 4], "thu": [4, 6, 13], "freq_tabl": [1, 4], "generate_freq_t": 4, "class_variable_list": 4, "class_name_1": 4, "class_name_2": 4, "classif": 4, "freq_table_with_rar": 4, "generate_freq_table_with_rar": [1, 4, 13], "float": [2, 3, 4, 9, 10], "class_lower_cas": 4, "along": 4, "genom": 4, "get_freq": 4, "class_str": [1, 4], "class_wise_group": 4, "return_class_variable_list": 4, "common_check": 4, "collect": 7, "locu": [7, 9], "lc": [7, 13], "locuscollector": [7, 13], "locus_t": [7, 9, 13], "generate_locus_t": [7, 13], "read_locu": 7, "drop_ratio": 10, "popul": 10, "b": [6, 10], "exampl": [2, 3, 6, 7, 8, 9, 10, 14], "filter_ab": [10, 13], "snpsfilter": [10, 13], "filtered_result": [10, 13], "drop_mask": [10, 13], "drop_report": [10, 13], "filter_a_and_b": [10, 13], "e": [1, 3, 10], "filter_a": 10, "filter_b": 10, "filtered_b": [10, 13], "specfic": [], "releas": [11, 14], "modul": 11, "framework": 12, "flexibl": 12, "feel": [2, 12], "free": [2, 12], "overrid": [2, 12], "idea": [], "etc": [], "welcom": [], "greatli": [], "appreci": [], "email": 12, "yihao": [12, 14], "li": [12, 14], "yl4326": [12, 13], "cumc": 12, "columbia": [12, 14], "edu": 12, "help": 12, "maintain": 12, "updat": 12, "through": 12, "github": [6, 12], "issu": 12, "anyth": 12, "tag": 12, "want": [2, 12], "open": 12, "whoever": 12, "enhanc": [], "note": [2, 13], "project": 14, "By": [], "agre": [], "abid": [], "term": 14, "To": [], "lpapip": [], "import": 13, "__version__": [], "modulenotfounderror": [], "traceback": [], "recent": [], "call": [], "last": [], "cell": 13, "In": [], "No": [], "repo": 14, "research": 14, "dr": 14, "gissett": 14, "soffer": 14, "badri": 14, "vardarajan": 14, "medic": 14, "center": 14, "shell": 14, "relat": [2, 8, 14], "et": 14, "al": 14, "paper": 14, "comprehens": 14, "map": 14, "singl": 14, "polymorph": 14, "hypervari": 14, "kringl": 14, "iv": 14, "variat": 14, "region": 14, "cloudgen": 14, "manag": 14, "anaconda": [], "fast": [], "virtual": [], "build": [], "backup": 14, "11": [13, 14], "25": [13, 14], "These": 14, "ion": 14, "repositori": 14, "wa": [13, 14], "under": [13, 14], "mit": 14, "proper": [], "tqdm": [], "met": [3, 9], "rel": [2, 4], "carrier": [1, 4], "typic": [], "over": 2, "simpler": 2, "serum": 2, "analyi": [], "v": 4, "lower": 4, "kept": 4, "found": [4, 14], "between": 4, "whole": 4, "even": [2, 4], "append": [4, 9], "ratio": 10, "higher": 10, "report": [10, 13], "about": 10, "mask": 10, "pass": 10, "filtered_df": [], "o": [2, 13], "remov": 13, "align": 13, "def": [], "source_path": [], "tidier": [], "join": 13, "vast": 13, "hpc": 13, "bvardarajan_lab": 13, "lpa_analysi": 13, "pipeline_output": 13, "tidied_output": 13, "illustration_run": 13, "data_inflow": 13, "bam_list_n": 13, "pipeline_test": [], "mute": 13, "washei25748": [], "washei25756": [], "washei25759": [], "class": 13, "search": 13, "complete_coverage_tot": 13, "complete_encoded_result": 13, "encoding_result": [6, 13], "read_csv": 13, "index_col": 13, "pca": 13, "eigen_result": 13, "ethnicity_from_eigenstrat": 13, "eigenstrat_complet": 13, "shape": 13, "3915": 13, "2130": 13, "3819": 13, "head": 13, "reset_index": 13, "pc1": 13, "pc2": 13, "pc3": 13, "0394": 13, "0118": 13, "0001": 13, "0280": 13, "0030": 13, "0480": 13, "0429": 13, "0254": 13, "0240": 13, "encoding_result_align": 13, "eigen_result_align": 13, "3817": 13, "filtered_a": 13, "g": [1, 6, 13], "16": 13, "17": 13, "left": 13, "1764": 13, "366": 13, "1533": 13, "597": 13, "709": 13, "mylocu": 13, "var": 13, "short": [], "intron": [], "locus_table_filt": 13, "isin": 13, "coassin_paper_exon": 13, "coassin_exon_from_excel_ocr_tidi": 13, "208": 13, "locus_exon": 13, "drop_dupl": 13, "pro": [], "584": [], "585": [], "586": [], "0113": 13, "0170": 13, "0402": 13, "0414": 13, "0200": 13, "0290": 13, "0344": 13, "0184": 13, "0465": 13, "freq_table_complet": 13, "count_af": 13, "total_af_detect": 13, "total_af_popul": 13, "freq_af": 13, "count_eu": 13, "total_eu_detect": 13, "total_eu_popul": 13, "freq_eu": 13, "count_hisp": 13, "total_hisp_detect": 13, "total_hisp_popul": 13, "freq_hisp": 13, "21": 13, "346": 13, "988": 13, "1120": 13, "350202": 13, "388": 13, "815": 13, "886": 13, "476074": 13, "945": 13, "1769": 13, "1811": 13, "534200": 13, "31": 13, "384": 13, "1009": 13, "380575": 13, "403": 13, "824": 13, "489078": 13, "1015": 13, "1777": 13, "571187": 13, "33": 13, "1010": 13, "000990": 13, "823": 13, "000000": 13, "1779": 13, "novelti": 13, "value_count": 13, "1318": 13, "103": 13, "dtype": 13, "int64": 13, "to_csv": 13, "hgrcgrid": [], "share": [], "serum_data": 13, "serum_data_snp": [], "personal_info": 13, "serum_data_personal_info": 13, "purpos": 2, "ag": 13, "gender": [1, 13], "93": 13, "72": 13, "0310": 13, "0025": 13, "0136": 13, "74": 13, "00": 13, "0435": 13, "0076": 13, "0145": 13, "82": 13, "0043": 13, "0004": 13, "0135": 13, "serum_result": 13, "serum_data_serum": 13, "renam": [8, 13], "lp": 13, "nmol": 13, "l": 13, "lpa": [1, 6], "isoform": 13, "express": 13, "don": 13, "what": [], "kiv": [6, 13], "motif": 13, "serum_asso": [], "function": [3, 8], "arg": 2, "data_analysis_result": 13, "illustrate_run": [], "lpa_ols_n_snp": 13, "107": 13, "was_ols_n_snp": [], "isoform_ols_n_snp": [], "phenotyp": [], "correl": [], "whicap_pheno_lpa_202306022": 13, "set_index": 13, "wes_id": 13, "isna": 13, "dem03": 13, "pick": [], "encoding_align": 13, "personal_info_align": 13, "eigen_align": 13, "22": 13, "81": 13, "77": 13, "71": 13, "dementia": 13, "1986": [], "1738": [], "tail": 13, "stroke": 13, "diabet": 13, "heart": 13, "hypertens": 13, "lip01_b": 13, "lip02_b": 13, "lip03_b": 13, "lip04_2": 13, "insl01_2": 13, "insl02_2": 13, "insl03_2": 13, "hba1c_2": 13, "95": 13, "83": 13, "37": 13, "addtion": [], "like": [], "group_bi": [], "lot": [], "meta_analysi": [8, 13], "list_fil": [], "startpath": [], "9728478": [], "dir": [], "walk": [], "level": 8, "replac": 13, "sep": [], "indent": [], "basenam": [], "subind": [], "f": 13, "dementia_logit_ethn": [], "af_n_snp": [], "496": [], "eu_n_snp": [], "397": [], "hisp_n_snp": [], "553": [], "diabetes_logit_ethn": [], "503": [], "396": [], "555": [], "hba1c_2_ols_ethn": [], "304": [], "271": [], "318": [], "heart_logit_ethn": [], "hypertension_logit_ethn": [], "552": [], "insl01_2_ols_ethn": [], "377": [], "314": [], "365": [], "insl02_2_ols_ethn": [], "378": [], "315": [], "insl03_2_ols_ethn": [], "374": [], "lip01_b_ols_ethn": [], "390": [], "385": [], "lip02_b_ols_ethn": [], "lip03_b_ols_ethn": [], "lip04_2_ols_ethn": [], "364": [], "stroke_logit_ethn": [], "425": [], "352": [], "431": [], "metaanalysis1": [], "tbl": [], "af_for_met": [], "eu_for_met": [], "hisp_for_met": [], "metal_dementia": [], "metal_diabet": [], "metal_hba1c_2": [], "metal_heart": [], "metal_hypertens": [], "metal_insl01_2": [], "metal_insl02_2": [], "metal_insl03_2": [], "metal_lip01_b": [], "metal_lip02_b": [], "metal_lip03_b": [], "metal_lip04_2": [], "metal_strok": [], "markernam": [], "eur": [], "se": 2, "rel_freq": [], "abs_freq": [], "aa": [], "allele1": [], "allele2": [], "stderr": [], "direct": 9, "n": [], "6113": [], "28": 13, "_save_association_result": 2, "separ": 3, "start_row": 8, "implement": 12, "depend": 14, "packag": [13, 14], "app_tar": 14, "detail": [13, 14], "readm": 14, "poetri": 14, "pyproject": 14, "toml": 14, "section": 14, "tool": 14, "src": 14, "r": [], "kiv_subtyp": [0, 5], "post_process": [0, 5, 13], "callabl": 2, "union": 2, "main": 2, "whose": 2, "debug_log": 2, "mode": [2, 13], "debug": 2, "care": [2, 13], "massiv": 2, "quantit": 2, "realist": 2, "sens": 2, "awkward": 2, "hashabl": [2, 3], "one_to_on": 2, "static": [3, 7, 9], "sample_id": 3, "core": 4, "groupbi": 4, "three": 6, "synonym": 6, "14": [6, 13], "41": [6, 13], "86": [6, 13], "exon": 6, "seen": 6, "www": 6, "atherosclerosi": 6, "journal": 6, "cm": 6, "1016": 6, "j": 6, "2022": 6, "04": [6, 13], "003": 6, "attach": 6, "32899cc9": 6, "f3a8": 6, "4354": 6, "86a8": 6, "5ebcec782688": 6, "mmc1": 6, "pdf": 6, "genepi": 6, "blob": 6, "master": 6, "maplocus_v3": 6, "421": 6, "bp": 6, "581": 6, "740": 6, "hi": 6, "confirm": 6, "sentenc": 6, "119": 6, "downstream": 6, "859": 6, "594": 6, "621": 6, "666": 6, "respect": 6, "kr": 6, "kivrepeatsubtyp": 6, "predict_subtyp": 6, "equival": 6, "predict": 6, "_predict_subtyp": 6, "subtyp": 6, "2_subtyp": 6, "describ": 6, "doi": 6, "org": 6, "engine_list": 8, "_get_snp_data": 8, "excelwrit": 8, "book": 8, "begin": 8, "argument": 8, "to_excel": [8, 13], "correct": 9, "doe": [8, 9], "fdr": 9, "adjust": 9, "stat": [9, 13], "multitest": 9, "multipletest": 9, "discrep": 9, "altern": 9, "also": 9, "pp": 9, "postprocessor": [9, 13], "post_process_associ": [9, 13], "some_association_result": 9, "post_process_meta_analysi": [9, 13], "correctmetaldirect": 9, "correct_effect": 9, "correct_direct": 9, "label": 9, "correct_metal_direct": 9, "append_locu": 9, "merg": [9, 13], "correct_metal_complet": 9, "fdradjust": 9, "p_value_threshold": 9, "05": [9, 13], "fdr_bh": 9, "appending_corrections_meta": 9, "sidak": 9, "bonferonni": 9, "appending_corrections_associ": 9, "appending_meta_analysi": 9, "appending_associ": 9, "postprocess": 9, "post": 9, "except": [2, 13], "progress": 2, "bar": 2, "appearancetablegener": 1, "ethnicity_list": 1, "rarity_list": 1, "generate_appearance_t": 1, "generate_appearance_table_ethnicity_gend": 1, "generate_ethnicity_rarity_info": 1, "_subclass_appearance_check_ethnicity_gend": 1, "appearance_table_gener": [0, 5], "sm": 13, "project_path": 13, "version_nam": 13, "removed_subtyp": 13, "chained_assign": 13, "slurm": 13, "rather": 13, "jupyt": 13, "took": 13, "hr": 13, "pc": 13, "matter": 13, "1421": 13, "while": 13, "loc": 13, "discov": 13, "164": 13, "identifi": 13, "novel": 13, "locus_table_novelty_and_missens": 13, "read_excel": 13, "visualization_freq": 13, "ipynb": 13, "outlier": 13, "insulin": 13, "809": 13, "miu": 13, "ml": 13, "washei30170": 13, "genotyp": 13, "44": 13, "nana": 13, "intercept": 13, "vntr_predict": 13, "vntr_pipelin": 13, "analysis_result": 13, "estimate_kiv2_length_psv": 13, "predicted_result_20240102_new_mask_simpl": 13, "output_nam": 13, "_trait_vs_snp": 13, "0221": 13, "0222": 13, "68": 13, "0367": 13, "0121": 13, "0452": 13, "too": 13, "mani": 13, "snp_associ": 13, "13": 13, "100": 13, "02": 13, "85": 13, "8": 13, "03": 13, "125": 13, "38": 13, "53": 13, "73": 13, "15": 13, "43": 13, "26": 13, "144": 13, "84": 13, "58": 13, "65": 13, "23": 13, "07": 13, "18": 13, "157": 13, "88": 13, "46": 13, "56": 13, "08": 13, "24": 13, "161": 13, "52": 13, "59": 13, "165": 13, "57": 13, "149": 13, "54": 13, "06": 13, "42": 13, "137": 13, "62": 13, "19": 13, "09": 13, "132": 13, "51": 13, "69": 13, "9": 13, "126": 13, "40": 13, "20": 13, "36": 13, "122": 13, "89": 13, "92": 13, "12": 13, "120": 13, "30": 13, "131": 13, "metal_pipeline_vari": 13, "removed_subtype_trait_vs_snp": 13, "post_processor_vari": 13, "complete_output": 13, "tidied_complete_output": 13, "clean_output": 13, "complete_output_tidi": 13, "_trait_vs_snp_adjusted_by_vntr": 13, "other_exogs_with_vntr_estim": 13, "estim": 13, "vntr_estim": 13, "386291": 13, "75": 13, "0056": 13, "0716": 13, "0368": 13, "352792": 13, "66": 13, "0269": 13, "0093": 13, "0084": 13, "638641": 13, "78": 13, "0156": 13, "0250": 13, "0519": 13, "183185": 13, "0235": 13, "0488": 13, "0111": 13, "130558": 13, "0208": 13, "0224": 13, "0116": 13, "45": 13, "139": 13, "35": 13, "48": 13, "141": 13, "94": 13, "142": 13, "39": 13, "152": 13, "34": 13, "135": 13, "127": 13, "121": 13, "114": 13, "32": 13, "110": 13, "49": 13, "108": 13, "47": 13, "60": 13, "removed_subtype_trait_vs_snp_adjusted_by_vntr": 13, "_apoe_vs_snp": 13, "apoe_valu": 13, "other_exogs_no_apo": 13, "apoe_strategi": 13, "148": 13, "removed_subtype_apoe_vs_snp": 13, "restrict": 13, "throughout": 13, "But": 13, "freqeunci": 13, "those": 13, "placehold": 13, "re": 13, "_trait_vs_apo": 13, "washei70623": 13, "washei70345": 13, "washei70493": 13, "washei71229": 13, "washei70625": 13, "03it": 13, "44it": 13, "28it": 13, "16it": 13, "08it": 13, "64it": 13, "32it": 13, "23it": 13, "29it": 13, "52it": 13, "40it": 13, "19it": 13, "35it": 13, "36it": 13, "26it": 13, "02it": 13, "38it": 13, "22it": 13, "58it": 13, "92it": 13, "67it": 13, "81it": 13, "30it": 13, "95it": 13, "91it": 13, "83it": 13, "55it": 13, "69it": 13, "metal_pipeline_apo": 13, "removed_subtype_trait_vs_apo": 13, "post_processor_apo": 13, "_serum_vs_snp": 13, "personal_info_serum_old": 13, "personal_info_serum": 13, "right": 13, "whicap_id": 13, "left_on": 13, "right_on": 13, "other_exogs_serum": 13, "right_index": 13, "encoding_serum": 13, "0508": 13, "0558": 13, "0104": 13, "90": 13, "0390": 13, "0314": 13, "0165": 13, "w05307": 13, "223": 13, "w06744": 13, "w06939": 13, "w06984": 13, "w07059": 13, "80": 13, "serum_associ": 13, "dont": 13, "race": [1, 13], "wis_ols_n_snp": 13, "project_nam": 13, "wis_complete_output": 13, "fdr_adjusted_p": 13, "significant_fdr": 13, "r_squar": 13, "wt": 13, "mut": 13, "wis_complete_tidi": 13, "lpa_complete_output": 13, "lpa_complete_tidi": 13, "_serum_vs_snp_adjusted_by_vntr": 13, "skip": 13, "washei64289": 13, "135733": 13, "washei41440": 13, "623412": 13, "washei40407": 13, "622735": 13, "0153": 13, "0746": 13, "0053": 13, "washei39055": 13, "639620": 13, "0186": 13, "0413": 13, "0168": 13, "washei37339": 13, "739429": 13, "0052": 13, "0327": 13, "asso": 13, "removed_subtype_serum_vs_snp_adjusted_by_vntr": 13, "_vntr_vs_snp": 13, "322922": 13, "421054": 13, "154933": 13, "107403": 13, "170373": 13, "vntr_strategi": 13, "169": 13, "removed_subtype_vntr_vs_snp": 13, "_trait_vs_vntr": 13, "vntr_as_exog": 13, "65it": 13, "05it": 13, "27it": 13, "25it": 13, "63it": 13, "43it": 13, "49it": 13, "56it": 13, "13it": 13, "72it": 13, "87it": 13, "84it": 13, "79it": 13, "metal_pipeline_vntr": 13, "removed_subtype_trait_vs_vntr": 13, "post_processor_vntr": 13, "_serum_vs_vntr": 13, "vntr_as_exog_serum": 13, "04it": 13, "_serum_vs_apoe_stratified_by_vntr": 13, "vntr_binari": 13, "high": 13, "low": 13, "other_exogs_serum_binary_vntr": 13, "washei36243": 13, "0205": 13, "0285": 13, "washei35857": 13, "0587": 13, "washei35820": 13, "0075": 13, "1631": 13, "0054": 13, "washei35683": 13, "washei35474": 13, "0231": 13, "0342": 13, "washei34421": 13, "76": 13, "0329": 13, "0095": 13, "0074": 13, "washei30180": 13, "0007": 13, "0264": 13, "washei29952": 13, "0218": 13, "0159": 13, "0115": 13, "washei51879": 13, "0209": 13, "0192": 13, "0088": 13, "washei50504": 13, "0386": 13, "0360": 13, "0220": 13, "washei50466": 13, "0036": 13, "0067": 13, "0079": 13, "washei49313": 13, "0450": 13, "0942": 13, "0060": 13, "washei45269": 13, "0245": 13, "0101": 13, "0100": 13, "washei45178": 13, "0468": 13, "1165": 13, "0069": 13, "washei39274": 13, "0498": 13, "1118": 13, "0081": 13, "washei37561": 13, "0260": 13, "0161": 13, "washei37093": 13, "0275": 13, "0000": 13, "0311": 13, "washei35828": 13, "0236": 13, "0034": 13, "0005": 13, "washei35718": 13, "0359": 13, "0858": 13, "0082": 13, "washei35479": 13, "washei30811": 13, "87": 13, "0461": 13, "0672": 13, "0009": 13, "washei30169": 13, "home": 13, "conda": 13, "my": 13, "env": 13, "lib": 13, "python3": 13, "site": 13, "scipi": 13, "py": 13, "1541": 13, "userwarn": 13, "kurtosistest": 13, "continu": 13, "anywai": 13, "warn": 13, "88it": 13, "54it": 13, "14it": 13, "42it": 13, "67": 13, "96it": 13, "_serum_vs_apo": 13, "31it": 13, "absoulut": 1, "ftg_freq_table_ethnicity_gend": 1, "ethnicity_gend": 1, "across": 1, "atg": 1, "personal_info_with_ethn": 1, "_": 1, "af_mal": 1, "eu_mal": 1, "upstream": 1}, "objects": {"": [[5, 0, 0, "-", "lpa_pipeline"]], "lpa_pipeline": [[1, 0, 0, "-", "appearance_table_generator"], [2, 0, 0, "-", "association"], [3, 0, 0, "-", "encodings"], [4, 0, 0, "-", "freq_table_generator"], [6, 0, 0, "-", "kiv_subtypes"], [7, 0, 0, "-", "locus_collector"], [8, 0, 0, "-", "metal_toolkit"], [9, 0, 0, "-", "post_processing"], [10, 0, 0, "-", "snps_filter"]], "lpa_pipeline.appearance_table_generator": [[1, 1, 1, "", "AppearanceTableGenerator"]], "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator": [[1, 2, 1, "", "_subclass_appearance_check_ethnicity_gender"], [1, 2, 1, "", "generate_appearance_table"], [1, 2, 1, "", "generate_appearance_table_ethnicity_gender"], [1, 2, 1, "", "generate_ethnicity_rarity_info"]], "lpa_pipeline.association": [[2, 1, 1, "", "SNPAssociation"], [2, 3, 1, "", "dropna"], [2, 3, 1, "", "encode_dementia"], [2, 3, 1, "", "filter_c"], [2, 3, 1, "", "target_strategy"], [2, 3, 1, "", "target_strategy_serum"]], "lpa_pipeline.association.SNPAssociation": [[2, 2, 1, "", "_association_snp"], [2, 2, 1, "", "_calculate_freq"], [2, 2, 1, "", "_generate_filename"], [2, 2, 1, "", "_generate_info"], [2, 2, 1, "", "_get_column_name"], [2, 2, 1, "", "_save_association_result"], [2, 2, 1, "", "association_test"], [2, 2, 1, "", "debug_log"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_transform"], [2, 2, 1, "", "transform"]], "lpa_pipeline.encodings": [[3, 1, 1, "", "EncodingCoassinOutput"], [3, 4, 1, "", "parser"]], "lpa_pipeline.encodings.EncodingCoassinOutput": [[3, 2, 1, "", "_combine_encoded_on_position"], [3, 2, 1, "", "_combine_position_wrapper"], [3, 2, 1, "", "_data_cleaning_annotated"], [3, 2, 1, "", "_data_cleaning_raw"], [3, 2, 1, "", "_encode_individual"], [3, 2, 1, "", "_encode_position"], [3, 2, 1, "", "_extract_id"], [3, 2, 1, "", "_get_coverage_total"], [3, 2, 1, "", "_get_file_annotated"], [3, 2, 1, "", "_get_file_raw"], [3, 2, 1, "", "_tidy_encoded_results"], [3, 2, 1, "", "_verify_coassin_output"], [3, 2, 1, "", "encode_individual"], [3, 2, 1, "", "generate_coverage_total"], [3, 2, 1, "", "generate_encoded_results"]], "lpa_pipeline.freq_table_generator": [[4, 1, 1, "", "FreqTableGenerator"], [4, 4, 1, "", "parser"]], "lpa_pipeline.freq_table_generator.FreqTableGenerator": [[4, 2, 1, "", "common_check"], [4, 2, 1, "", "generate_freq_table"], [4, 2, 1, "", "generate_freq_table_with_rarity"], [4, 2, 1, "", "get_freq"]], "lpa_pipeline.kiv_subtypes": [[6, 1, 1, "", "KIVRepeatSubtype"]], "lpa_pipeline.kiv_subtypes.KIVRepeatSubtype": [[6, 2, 1, "", "_predict_subtype"], [6, 2, 1, "", "predict_subtype"]], "lpa_pipeline.locus_collector": [[7, 1, 1, "", "LocusCollector"], [7, 4, 1, "", "parser"]], "lpa_pipeline.locus_collector.LocusCollector": [[7, 2, 1, "", "generate_locus_table"], [7, 2, 1, "", "read_locus"]], "lpa_pipeline.metal_toolkit": [[8, 1, 1, "", "METALToolkit"], [8, 4, 1, "", "parser"]], "lpa_pipeline.metal_toolkit.METALToolkit": [[8, 2, 1, "", "_get_pos"], [8, 2, 1, "", "_get_snp_data"], [8, 2, 1, "", "_logging"], [8, 2, 1, "", "_metal_script_analyze"], [8, 2, 1, "", "_metal_script_description"], [8, 2, 1, "", "_metal_script_header"], [8, 2, 1, "", "_save_double_column_df"], [8, 2, 1, "", "aggregate_result"], [8, 2, 1, "", "copy_tree"], [8, 2, 1, "", "csv_to_metal"], [8, 2, 1, "", "dataframe_to_metal"], [8, 2, 1, "", "formatting_final_result"], [8, 2, 1, "", "generate_metal_running_script"], [8, 2, 1, "", "generate_metal_script"], [8, 2, 1, "", "run_metal"], [8, 2, 1, "", "save_final_output"]], "lpa_pipeline.post_processing": [[9, 1, 1, "", "CorrectMetalDirection"], [9, 1, 1, "", "FdrAdjustment"], [9, 1, 1, "", "PostProcessor"]], "lpa_pipeline.post_processing.CorrectMetalDirection": [[9, 2, 1, "", "append_locus"], [9, 2, 1, "", "correct_direction"], [9, 2, 1, "", "correct_effect"], [9, 2, 1, "", "correct_metal_complete"], [9, 2, 1, "", "correct_metal_direction"]], "lpa_pipeline.post_processing.FdrAdjustment": [[9, 2, 1, "", "appending_association"], [9, 2, 1, "", "appending_corrections_association"], [9, 2, 1, "", "appending_corrections_meta"], [9, 2, 1, "", "appending_meta_analysis"]], "lpa_pipeline.post_processing.PostProcessor": [[9, 2, 1, "", "post_process_association"], [9, 2, 1, "", "post_process_meta_analysis"]], "lpa_pipeline.snps_filter": [[10, 1, 1, "", "SnpsFilter"], [10, 4, 1, "", "parser"]], "lpa_pipeline.snps_filter.SnpsFilter": [[10, 2, 1, "", "drop_report"], [10, 2, 1, "", "filter_a"], [10, 2, 1, "", "filter_a_and_b"], [10, 2, 1, "", "filter_b"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "refer": 0, "lpa_pipelin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "metal_toolkit": 8, "modul": [1, 2, 3, 4, 6, 7, 8, 9, 10], "content": [1, 2, 3, 4, 6, 7, 8, 9, 10], "class": [1, 2, 3, 4, 6, 7, 8, 9, 10], "function": 2, "attribut": [3, 4, 7, 8, 10], "associ": [2, 13], "encod": [3, 13], "freq_table_gener": 4, "submodul": 5, "locus_collector": 7, "snps_filter": 10, "changelog": 11, "v0": 11, "1": 11, "0": 11, "25": 11, "07": 11, "2023": 11, "contribut": 12, "type": [], "fix": 12, "bug": 12, "implement": [], "featur": [], "code": [], "conduct": [], "exampl": [], "usag": 14, "lpa": [13, 14], "analysi": [13, 14], "licens": 14, "output": 13, "from": 13, "coassin": 13, "pipelin": 13, "intersect": 13, "eigenstrat": 13, "result": 13, "filter": 13, "variant": 13, "locu": 13, "tabl": 13, "illustr": 13, "new": 13, "exon": 13, "compar": 13, "s9": 13, "freq": 13, "appear": 13, "regress": [], "n_subject": [], "27": 13, "n_var": [], "1421": [], "3774": 13, "metal": [], "meta": 13, "environ": 14, "kiv_subtyp": 6, "post_process": 9, "appearance_table_gener": 1, "data": 13, "load": 13, "apoe4": 13, "other": 13, "phenotyp": 13, "v": 13, "snp": 13, "trait": 13, "vntr": 13, "about": 13, "apo": 13, "exist": 13, "serum": 13, "level": 13, "wi": 13, "adjust": 13, "n": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Changelog": [[11, "changelog"]], "v0.1.0 (25/07/2023)": [[11, "v0-1-0-25-07-2023"]], "Contributing": [[12, "contributing"]], "Fix Bugs": [[12, "fix-bugs"]], "Encode the output from Coassin pipeline": [[13, "encode-the-output-from-coassin-pipeline"]], "Intersect with eigenstrat result": [[13, "intersect-with-eigenstrat-result"]], "Filter the encoded variants": [[13, "filter-the-encoded-variants"]], "Locus table illustration": [[13, "locus-table-illustration"]], "New Exon variant compared with Coassin table S9": [[13, "new-exon-variant-compared-with-coassin-table-s9"]], "Freq and appearance": [[13, "freq-and-appearance"]], "Data Loading for Associations and meta-analysis": [[13, "data-loading-for-associations-and-meta-analysis"]], "APOE4+": [[13, "apoe4"]], "Others": [[13, "others"]], "Phenotypes vs SNP": [[13, "phenotypes-vs-snp"]], "Traits ~ SNP (meta-analysis)": [[13, "traits-snp-meta-analysis"]], "Phenotypes ~ SNP + VNTR (meta-analysis)": [[13, "phenotypes-snp-vntr-meta-analysis"]], "About APOE": [[13, "about-apoe"]], "APOE ~ SNP (meta-analysis)": [[13, "apoe-snp-meta-analysis"]], "Phenotypes ~ APOE (meta-analysis)": [[13, "phenotypes-apoe-meta-analysis"]], "About existing serum level": [[13, "about-existing-serum-level"]], "lpa/wIS ~ SNP + adjustments (association, N = 27)": [[13, "lpa-wis-snp-adjustments-association-n-27"]], "lpa/wIS ~ SNPS + VNTR (association, N = 27)": [[13, "lpa-wis-snps-vntr-association-n-27"]], "About VNTR": [[13, "about-vntr"]], "VNTR ~ SNP + Adjustment (meta-analysis, N = 3774)": [[13, "vntr-snp-adjustment-meta-analysis-n-3774"]], "Phenotypes ~ VNTR + Adjustment (meta-analysis N = 3774)": [[13, "phenotypes-vntr-adjustment-meta-analysis-n-3774"]], "LPA/WIS ~ VNTR + adjustment (Association N = 27)": [[13, "lpa-wis-vntr-adjustment-association-n-27"]], "API Reference": [[0, "api-reference"]], "lpa_pipeline.appearance_table_generator": [[1, "module-lpa_pipeline.appearance_table_generator"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"]], "lpa_pipeline.association": [[2, "module-lpa_pipeline.association"]], "Functions": [[2, "functions"]], "lpa_pipeline.encodings": [[3, "module-lpa_pipeline.encodings"]], "Attributes": [[3, "attributes"], [4, "attributes"], [7, "attributes"], [8, "attributes"], [10, "attributes"]], "lpa_pipeline.freq_table_generator": [[4, "module-lpa_pipeline.freq_table_generator"]], "lpa_pipeline": [[5, "module-lpa_pipeline"]], "Submodules": [[5, "submodules"]], "lpa_pipeline.kiv_subtypes": [[6, "module-lpa_pipeline.kiv_subtypes"]], "lpa_pipeline.locus_collector": [[7, "module-lpa_pipeline.locus_collector"]], "lpa_pipeline.metal_toolkit": [[8, "module-lpa_pipeline.metal_toolkit"]], "lpa_pipeline.post_processing": [[9, "module-lpa_pipeline.post_processing"]], "lpa_pipeline.snps_filter": [[10, "module-lpa_pipeline.snps_filter"]], "lpa-analysis": [[14, "lpa-analysis"]], "Environment": [[14, "environment"]], "Usage": [[14, "usage"]], "License": [[14, "license"]]}, "indexentries": {"appearancetablegenerator (class in lpa_pipeline.appearance_table_generator)": [[1, "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator"]], "_subclass_appearance_check_ethnicity_gender() (lpa_pipeline.appearance_table_generator.appearancetablegenerator method)": [[1, "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator._subclass_appearance_check_ethnicity_gender"]], "generate_appearance_table() (lpa_pipeline.appearance_table_generator.appearancetablegenerator method)": [[1, "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator.generate_appearance_table"]], "generate_appearance_table_ethnicity_gender() (lpa_pipeline.appearance_table_generator.appearancetablegenerator method)": [[1, "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator.generate_appearance_table_ethnicity_gender"]], "generate_ethnicity_rarity_info() (lpa_pipeline.appearance_table_generator.appearancetablegenerator method)": [[1, "lpa_pipeline.appearance_table_generator.AppearanceTableGenerator.generate_ethnicity_rarity_info"]], "lpa_pipeline.appearance_table_generator": [[1, "module-lpa_pipeline.appearance_table_generator"]], "module": [[1, "module-lpa_pipeline.appearance_table_generator"], [2, "module-lpa_pipeline.association"], [3, "module-lpa_pipeline.encodings"], [4, "module-lpa_pipeline.freq_table_generator"], [5, "module-lpa_pipeline"], [6, "module-lpa_pipeline.kiv_subtypes"], [7, "module-lpa_pipeline.locus_collector"], [8, "module-lpa_pipeline.metal_toolkit"], [9, "module-lpa_pipeline.post_processing"], [10, "module-lpa_pipeline.snps_filter"]], "snpassociation (class in lpa_pipeline.association)": [[2, "lpa_pipeline.association.SNPAssociation"]], "_association_snp() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._association_snp"]], "_calculate_freq() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._calculate_freq"]], "_generate_filename() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._generate_filename"]], "_generate_info() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._generate_info"]], "_get_column_name() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._get_column_name"]], "_save_association_result() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation._save_association_result"]], "association_test() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation.association_test"]], "debug_log() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation.debug_log"]], "dropna() (in module lpa_pipeline.association)": [[2, "lpa_pipeline.association.dropna"]], "encode_dementia() (in module lpa_pipeline.association)": [[2, "lpa_pipeline.association.encode_dementia"]], "filter_c() (in module lpa_pipeline.association)": [[2, "lpa_pipeline.association.filter_c"]], "fit() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation.fit"]], "fit_transform() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation.fit_transform"]], "lpa_pipeline.association": [[2, "module-lpa_pipeline.association"]], "target_strategy() (in module lpa_pipeline.association)": [[2, "lpa_pipeline.association.target_strategy"]], "target_strategy_serum() (in module lpa_pipeline.association)": [[2, "lpa_pipeline.association.target_strategy_serum"]], "transform() (lpa_pipeline.association.snpassociation method)": [[2, "lpa_pipeline.association.SNPAssociation.transform"]], "encodingcoassinoutput (class in lpa_pipeline.encodings)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput"]], "_combine_encoded_on_position() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._combine_encoded_on_position"]], "_combine_position_wrapper() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._combine_position_wrapper"]], "_data_cleaning_annotated() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._data_cleaning_annotated"]], "_data_cleaning_raw() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._data_cleaning_raw"]], "_encode_individual() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._encode_individual"]], "_encode_position() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._encode_position"]], "_extract_id() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._extract_id"]], "_get_coverage_total() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._get_coverage_total"]], "_get_file_annotated() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._get_file_annotated"]], "_get_file_raw() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._get_file_raw"]], "_tidy_encoded_results() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._tidy_encoded_results"]], "_verify_coassin_output() (lpa_pipeline.encodings.encodingcoassinoutput static method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput._verify_coassin_output"]], "encode_individual() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput.encode_individual"]], "generate_coverage_total() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput.generate_coverage_total"]], "generate_encoded_results() (lpa_pipeline.encodings.encodingcoassinoutput method)": [[3, "lpa_pipeline.encodings.EncodingCoassinOutput.generate_encoded_results"]], "lpa_pipeline.encodings": [[3, "module-lpa_pipeline.encodings"]], "parser (in module lpa_pipeline.encodings)": [[3, "lpa_pipeline.encodings.parser"]], "freqtablegenerator (class in lpa_pipeline.freq_table_generator)": [[4, "lpa_pipeline.freq_table_generator.FreqTableGenerator"]], "common_check() (lpa_pipeline.freq_table_generator.freqtablegenerator method)": [[4, "lpa_pipeline.freq_table_generator.FreqTableGenerator.common_check"]], "generate_freq_table() (lpa_pipeline.freq_table_generator.freqtablegenerator method)": [[4, "lpa_pipeline.freq_table_generator.FreqTableGenerator.generate_freq_table"]], "generate_freq_table_with_rarity() (lpa_pipeline.freq_table_generator.freqtablegenerator method)": [[4, "lpa_pipeline.freq_table_generator.FreqTableGenerator.generate_freq_table_with_rarity"]], "get_freq() (lpa_pipeline.freq_table_generator.freqtablegenerator method)": [[4, "lpa_pipeline.freq_table_generator.FreqTableGenerator.get_freq"]], "lpa_pipeline.freq_table_generator": [[4, "module-lpa_pipeline.freq_table_generator"]], "parser (in module lpa_pipeline.freq_table_generator)": [[4, "lpa_pipeline.freq_table_generator.parser"]], "lpa_pipeline": [[5, "module-lpa_pipeline"]], "kivrepeatsubtype (class in lpa_pipeline.kiv_subtypes)": [[6, "lpa_pipeline.kiv_subtypes.KIVRepeatSubtype"]], "_predict_subtype() (lpa_pipeline.kiv_subtypes.kivrepeatsubtype method)": [[6, "lpa_pipeline.kiv_subtypes.KIVRepeatSubtype._predict_subtype"]], "lpa_pipeline.kiv_subtypes": [[6, "module-lpa_pipeline.kiv_subtypes"]], "predict_subtype() (lpa_pipeline.kiv_subtypes.kivrepeatsubtype method)": [[6, "lpa_pipeline.kiv_subtypes.KIVRepeatSubtype.predict_subtype"]], "locuscollector (class in lpa_pipeline.locus_collector)": [[7, "lpa_pipeline.locus_collector.LocusCollector"]], "generate_locus_table() (lpa_pipeline.locus_collector.locuscollector method)": [[7, "lpa_pipeline.locus_collector.LocusCollector.generate_locus_table"]], "lpa_pipeline.locus_collector": [[7, "module-lpa_pipeline.locus_collector"]], "parser (in module lpa_pipeline.locus_collector)": [[7, "lpa_pipeline.locus_collector.parser"]], "read_locus() (lpa_pipeline.locus_collector.locuscollector static method)": [[7, "lpa_pipeline.locus_collector.LocusCollector.read_locus"]], "metaltoolkit (class in lpa_pipeline.metal_toolkit)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit"]], "_get_pos() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._get_pos"]], "_get_snp_data() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._get_snp_data"]], "_logging() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._logging"]], "_metal_script_analyze() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._metal_script_analyze"]], "_metal_script_description() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._metal_script_description"]], "_metal_script_header() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._metal_script_header"]], "_save_double_column_df() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit._save_double_column_df"]], "aggregate_result() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.aggregate_result"]], "copy_tree() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.copy_tree"]], "csv_to_metal() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.csv_to_metal"]], "dataframe_to_metal() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.dataframe_to_metal"]], "formatting_final_result() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.formatting_final_result"]], "generate_metal_running_script() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.generate_metal_running_script"]], "generate_metal_script() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.generate_metal_script"]], "lpa_pipeline.metal_toolkit": [[8, "module-lpa_pipeline.metal_toolkit"]], "parser (in module lpa_pipeline.metal_toolkit)": [[8, "lpa_pipeline.metal_toolkit.parser"]], "run_metal() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.run_metal"]], "save_final_output() (lpa_pipeline.metal_toolkit.metaltoolkit method)": [[8, "lpa_pipeline.metal_toolkit.METALToolkit.save_final_output"]], "correctmetaldirection (class in lpa_pipeline.post_processing)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection"]], "fdradjustment (class in lpa_pipeline.post_processing)": [[9, "lpa_pipeline.post_processing.FdrAdjustment"]], "postprocessor (class in lpa_pipeline.post_processing)": [[9, "lpa_pipeline.post_processing.PostProcessor"]], "append_locus() (lpa_pipeline.post_processing.correctmetaldirection method)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection.append_locus"]], "appending_association() (lpa_pipeline.post_processing.fdradjustment method)": [[9, "lpa_pipeline.post_processing.FdrAdjustment.appending_association"]], "appending_corrections_association() (lpa_pipeline.post_processing.fdradjustment method)": [[9, "lpa_pipeline.post_processing.FdrAdjustment.appending_corrections_association"]], "appending_corrections_meta() (lpa_pipeline.post_processing.fdradjustment method)": [[9, "lpa_pipeline.post_processing.FdrAdjustment.appending_corrections_meta"]], "appending_meta_analysis() (lpa_pipeline.post_processing.fdradjustment method)": [[9, "lpa_pipeline.post_processing.FdrAdjustment.appending_meta_analysis"]], "correct_direction() (lpa_pipeline.post_processing.correctmetaldirection static method)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection.correct_direction"]], "correct_effect() (lpa_pipeline.post_processing.correctmetaldirection static method)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection.correct_effect"]], "correct_metal_complete() (lpa_pipeline.post_processing.correctmetaldirection method)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection.correct_metal_complete"]], "correct_metal_direction() (lpa_pipeline.post_processing.correctmetaldirection method)": [[9, "lpa_pipeline.post_processing.CorrectMetalDirection.correct_metal_direction"]], "lpa_pipeline.post_processing": [[9, "module-lpa_pipeline.post_processing"]], "post_process_association() (lpa_pipeline.post_processing.postprocessor method)": [[9, "lpa_pipeline.post_processing.PostProcessor.post_process_association"]], "post_process_meta_analysis() (lpa_pipeline.post_processing.postprocessor method)": [[9, "lpa_pipeline.post_processing.PostProcessor.post_process_meta_analysis"]], "snpsfilter (class in lpa_pipeline.snps_filter)": [[10, "lpa_pipeline.snps_filter.SnpsFilter"]], "drop_report() (lpa_pipeline.snps_filter.snpsfilter method)": [[10, "lpa_pipeline.snps_filter.SnpsFilter.drop_report"]], "filter_a() (lpa_pipeline.snps_filter.snpsfilter method)": [[10, "lpa_pipeline.snps_filter.SnpsFilter.filter_a"]], "filter_a_and_b() (lpa_pipeline.snps_filter.snpsfilter method)": [[10, "lpa_pipeline.snps_filter.SnpsFilter.filter_a_and_b"]], "filter_b() (lpa_pipeline.snps_filter.snpsfilter method)": [[10, "lpa_pipeline.snps_filter.SnpsFilter.filter_b"]], "lpa_pipeline.snps_filter": [[10, "module-lpa_pipeline.snps_filter"]], "parser (in module lpa_pipeline.snps_filter)": [[10, "lpa_pipeline.snps_filter.parser"]]}})